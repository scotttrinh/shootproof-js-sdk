{"version":3,"file":"shootproof.es.js","sources":["../src/utils/object-to-form-data.js","../src/utils/check-status.js","../src/token.js","../src/lib.js","../src/studio.js","../src/event.js"],"sourcesContent":["import { forEach } from 'lodash-es/forEach';\n/**\n * Convert a plain JavaScript object into FormData\n *\n * @param obj Object Source object\n * @return FormData FormData\n */\nexport default function objectToFormData(obj) {\n  const fd = new FormData();\n  forEach((val, key) => {\n    fd.append(key, val);\n  }, obj);\n  return fd;\n}\n","/**\n * Throw an error for non 2xx status\n *\n * @param response Object Response from whatwg-fetch request\n */\nexport default function checkStatus(response) {\n  let error;\n  if (response.status >= 300) {\n    error = new Error(response.statusText);\n    error.response = response;\n    throw error;\n  } else {\n    return response;\n  }\n}\n","let accessToken = '';\nlet refreshToken = '';\n\n/**\n * Set access token\n *\n * @param token String Token string\n */\nfunction setAccessToken(token) {\n  accessToken = token;\n}\n\n/**\n * Get access token\n *\n * @return String Access token string\n */\nfunction getAccessToken() {\n  return accessToken;\n}\n\n/**\n * Set refresh token\n *\n * @param token String Token string\n */\nfunction setRefreshToken(token) {\n  refreshToken = token;\n}\n\n/**\n * Get refresh token\n *\n * @return String Refresh token string\n */\nfunction getRefreshToken() {\n  return refreshToken;\n}\n\nexport {\n  getAccessToken,\n  setAccessToken,\n  getRefreshToken,\n  setRefreshToken,\n};\n","import queryString from 'query-string';\nimport fetch from 'whatwg-fetch';\nimport merge from 'lodash-es/merge';\nimport isEmpty from 'lodash-es/isEmpty';\nimport { checkStatus, objectToFormData } from './utils';\nimport { getAccessToken } from './token';\n\nconst baseEndPoint = 'https://api.shootproof.com/v2';\n\n/**\n * Method to make the request to the API\n *\n * @param params Object Parameters including access token, etc.\n * @param photos Object Photos\n * @return Promise Promise containing JSON. Will throw an\n *   error if the status code is >= 300.\n */\nfunction makeRequest(url, params = {}, photos = {}) {\n  let _params = merge({}, params);\n  /* eslint-disable quote-props */\n  const headers = {\n    'Accept': 'application/json',\n    'Content-Type': 'application/x-www-form-urlencoded',\n    'X-WRAPPER': 'js-1.0.0',\n  };\n  /* eslint-enable quote-props */\n  if (!isEmpty(photos)) {\n    _params = merge(_params, photos);\n  }\n  return fetch(url, {\n    method: 'POST',\n    headers,\n    body: objectToFormData(_params),\n  })\n    .then(checkStatus)\n    .then(response => response.json());\n}\n\n/**\n * Wrapper that adds access token to parameters\n *\n * @param params Object Parameters including access token, etc.\n * @param photos Object Photos\n * @return Object JSON response\n */\nfunction makeApiRequest(params = {}, photos = {}) {\n  const _params = merge(params, {\n    access_token: getAccessToken,\n  });\n  return makeRequest(baseEndPoint, _params, photos);\n}\n\n/**\n * Build the URL for the given path and parameters\n *\n * @param path String (optional) The path\n * @param params Object (optional) The query parameters\n * @return String The URL for the given parameters\n */\nfunction getUri(path = '', params = {}) {\n  return path + queryString.stringify(params);\n}\n\nexport {\n  makeApiRequest,\n  makeRequest,\n  getUri,\n};\n","import { makeApiRequest } from './lib';\n\n/**\n * Method to return studio information\n *\n * @return Promise Fetch response\n */\nfunction getStudioInfo() {\n  return makeApiRequest({\n    method: 'sp.studio.info',\n  });\n}\n\n/**\n * Method to set a studio setting\n *\n * @param key String Setting name\n * @param val String Setting value\n * @return Promise Fetch response\n */\nfunction setStudioSetting(key, val) {\n  return makeApiRequest({\n    method: 'sp.studio.set_setting',\n    setting_key: key,\n    setting_value: val,\n  });\n}\n\n/**\n * Method to get a studio setting\n *\n * @param key String Setting name\n * @return Promise Fetch response\n */\nfunction getStudioSetting(key) {\n  return makeApiRequest({\n    method: 'sp.studio.get_setting',\n    setting_key: key,\n  });\n}\n\nexport {\n  getStudioInfo,\n  setStudioSetting,\n  getStudioSetting,\n};\n","import isEmpty from 'lodash-es/isEmpty';\nimport isUndefined from 'lodash-es/isUndefined';\nimport { makeApiRequest } from './lib';\n\n/**\n * Method to return all open events for a studio\n *\n * @param brandId Number (optional) Brand ID to retrieve list for.\n * @return Promise Fetch response\n */\nfunction getEvents(brandId) {\n  const params = {\n    method: 'sp.event.get_list',\n  };\n  if (!isUndefined(brandId)) {\n    params.brandId = brandId;\n  }\n  return makeApiRequest(params);\n}\n\n/**\n * Method to create a new event\n *\n * @param name String Event name\n * @param brandId String (optional) Brand ID\n * @param date String (optional) Event date as ISO8601 date string\n * @return Promise Fetch response\n */\nfunction createEvent(name, brandId, date) {\n  if (isUndefined(name)) {\n    throw new Error('You must set the name for a new event');\n  }\n  const params = {\n    method: 'sp.event.create',\n    event_name: name,\n  };\n  if (!isUndefined(brandId)) {\n    params.brand_id = brandId;\n  }\n  if (!isUndefined(date)) {\n    params.event_date = date;\n  }\n  return makeApiRequest(params);\n}\n\n/**\n * Method to delete an event\n *\n * @param eventId Number Event ID to delete\n * @return Promise Fetch response\n */\nfunction deleteEvent(eventId) {\n  if (isUndefined(eventId)) {\n    throw new Error('You must supply an event ID if you wish to delete an event');\n  }\n\n  return makeApiRequest({\n    method: 'sp.event.delete',\n    event_id: eventId,\n  });\n}\n\n/**\n * Method to check if a photo exists in an event\n *\n * @param eventId Number Event ID\n * @param photoFileName String Photo file name\n * @return Promise Fetch response\n */\nfunction photoExistsInEvent(eventId, photoFileName) {\n  if (isUndefined(eventId) || isUndefined(photoFileName)) {\n    throw new Error('You must provide an event ID and photo filename');\n  }\n  return makeApiRequest({\n    method: 'sp.event.photo_exists',\n    event_id: eventId,\n    photo_name: photoFileName,\n  });\n}\n\n/**\n * Method to set the event access level and password\n *\n * @param eventId Number Event ID\n * @param accessLevel String Access Level string\n * @param password String (optional) Event password\n * @return Promise Fetch response\n */\nfunction setEventAccessLevel(eventId, accessLevel, password) {\n  if (isUndefined(eventId) || isUndefined(accessLevel)) {\n    throw new Error('You must define an event ID and an access level');\n  }\n\n  const params = {\n    method: 'sp.event.set_access_level',\n    event_id: eventId,\n    access_level: accessLevel,\n  };\n\n  if (!isEmpty(password)) {\n    params.password = password;\n  }\n\n  return makeApiRequest(params);\n}\n\n/**\n * Method to get photos for an event\n *\n * @param eventId Number Event ID\n * @param page Number Page number\n * @return Promise Fetch response\n */\nfunction getEventPhotos(eventId, page) {\n  if (isUndefined(eventId)) {\n    throw new Error('You must define an event ID');\n  }\n\n  return makeApiRequest({\n    method: 'sp.event.get_photos',\n    event_id: eventId,\n    page,\n  });\n}\n\nexport {\n  getEvents,\n  createEvent,\n  deleteEvent,\n  photoExistsInEvent,\n  setEventAccessLevel,\n  getEventPhotos,\n};\n"],"names":[],"mappings":"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"}